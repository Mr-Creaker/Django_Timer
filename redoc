{"swagger": "2.0", "info": {"title": "API", "description": "redoc", "termsOfService": "https://www.google.com/policies/terms/", "contact": {"email": "contact@snippets.local"}, "license": {"name": "BSD License"}, "version": "v1"}, "host": "127.0.0.1:8000", "schemes": ["http"], "basePath": "/api", "consumes": ["application/json"], "produces": ["application/json"], "securityDefinitions": {"Basic": {"type": "basic"}}, "security": [{"Basic": []}], "paths": {"/timers/": {"get": {"operationId": "timers_list", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Timer"}}}}, "tags": ["timers"]}, "post": {"operationId": "timers_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Timer"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Timer"}}}, "tags": ["timers"]}, "parameters": []}, "/timers/active_timers/": {"get": {"operationId": "timers_active_timers", "description": "Отримати всі активні таймери (які ще не закінчилися)", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Timer"}}}}, "tags": ["timers"]}, "parameters": []}, "/timers/{id}/": {"get": {"operationId": "timers_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Timer"}}}, "tags": ["timers"]}, "put": {"operationId": "timers_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Timer"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Timer"}}}, "tags": ["timers"]}, "patch": {"operationId": "timers_partial_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Timer"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Timer"}}}, "tags": ["timers"]}, "delete": {"operationId": "timers_delete", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["timers"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this timer.", "required": true, "type": "integer"}]}, "/token/": {"post": {"operationId": "token_create", "description": "Takes a set of user credentials and returns an access and refresh JSON web\ntoken pair to prove the authentication of those credentials.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/TokenObtainPair"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/TokenObtainPair"}}}, "tags": ["token"]}, "parameters": []}, "/token/refresh/": {"post": {"operationId": "token_refresh_create", "description": "Takes a refresh type JSON web token and returns an access type JSON web\ntoken if the refresh token is valid.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/TokenRefresh"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/TokenRefresh"}}}, "tags": ["token"]}, "parameters": []}, "/users/": {"get": {"operationId": "users_list", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/User"}}}}, "tags": ["users"]}, "post": {"operationId": "users_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/User"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/User"}}}, "tags": ["users"]}, "parameters": []}, "/users/{id}/": {"get": {"operationId": "users_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/User"}}}, "tags": ["users"]}, "put": {"operationId": "users_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/User"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/User"}}}, "tags": ["users"]}, "patch": {"operationId": "users_partial_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/User"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/User"}}}, "tags": ["users"]}, "delete": {"operationId": "users_delete", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["users"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this user.", "required": true, "type": "integer"}]}}, "definitions": {"Timer": {"required": ["start_time", "end_time"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "user": {"title": "User", "type": "integer", "readOnly": true}, "start_time": {"title": "Start time", "type": "string", "format": "date-time"}, "end_time": {"title": "End time", "type": "string", "format": "date-time"}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}}}, "TokenObtainPair": {"required": ["email", "password"], "type": "object", "properties": {"email": {"title": "Email", "type": "string", "minLength": 1}, "password": {"title": "Password", "type": "string", "minLength": 1}}}, "TokenRefresh": {"required": ["refresh"], "type": "object", "properties": {"refresh": {"title": "Refresh", "type": "string", "minLength": 1}, "access": {"title": "Access", "type": "string", "readOnly": true, "minLength": 1}}}, "User": {"required": ["username", "email", "password"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "username": {"title": "Username", "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.", "type": "string", "pattern": "^[\\w.@+-]+$", "maxLength": 150, "minLength": 1}, "email": {"title": "Email", "type": "string", "format": "email", "maxLength": 254, "minLength": 1}, "gender": {"title": "Gender", "type": "string", "enum": ["Male", "Female"]}, "birth_date": {"title": "Birth date", "type": "string", "format": "date", "x-nullable": true}, "password": {"title": "Password", "type": "string", "minLength": 1}}}}}